{"version":3,"sources":["assets/naosejaotario.mp3","components/notificator/Notificator.js","components/calculator-rm/CalculatorRm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Notificator","useState","soundEnabled","setSoundEnabled","useSound","naosejaotario","play","stop","timer","setTimer","timeframe","setTimeframe","segundos","setSegundos","Date","toDateString","datetime","setDatetime","notificar","setTimeout","Notification","permission","requestPermission","d","hr","Intl","DateTimeFormat","hour","minute","second","format","icon","body","onclick","window","open","Grid","container","direction","justify","alignItems","spacing","item","Input","value","onChange","e","target","Button","variant","onClick","clickStartNotification","date","console","log","minutosCheck","minutes","getMinutes","toString","push","length","substring","indexOf","getSeconds","color","clearTimeout","Checkbox","name","checked","size","label","event","CalculatorRm","averan","setAveran","capital","setCapital","risco","setRisco","preco","setPreco","capitalLote","gainTicks","lossTicks","lossMaxOp","lote","gainLote","lossMaxLote","porcentagemGainCapital","porcentagemLossCapital","calculo","setCalculo","displayType","decimalScale","prefix","suffix","App","className","style","padding","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.251493f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/naosejaotario.fec033b5.mp3\";","import React, { useState }  from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Input, Button, Checkbox } from '@material-ui/core';\r\nimport useSound from 'use-sound';\r\nimport naosejaotario from '../../assets/naosejaotario.mp3';\r\n\r\nfunction Notificator() {\r\n\r\n  const [soundEnabled, setSoundEnabled] = useState(true);\r\n  const [play, { stop }] = useSound(naosejaotario);\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  const [timeframe, setTimeframe] = useState('5');\r\n  const [segundos, setSegundos] = useState('10');\r\n  const [datetime, setDatetime] = useState(new Date().toDateString());\r\n\r\n  const handleTimeframeChange = e => {\r\n    setTimeframe(e.target.value);\r\n  };\r\n\r\n  const handleSegundosChange = e => {\r\n    setSegundos(e.target.value);\r\n  };\r\n\r\n  const notificar = () => {\r\n    if(soundEnabled) {\r\n      play();\r\n      setTimeout(() => stop() , 6000);\r\n    }\r\n    \r\n    if (Notification.permission !== 'granted')\r\n        Notification.requestPermission();\r\n      else {\r\n        const d = new Date();\r\n        const hr = new Intl.DateTimeFormat('pt-br', { hour: 'numeric', minute: 'numeric', second: 'numeric' }).format(d);\r\n        setDatetime(hr);\r\n\r\n        const notification = new Notification('Fechando barra!', {\r\n          icon: 'clock.png',\r\n          body: hr,\r\n        });\r\n        notification.onclick = function () {\r\n          window.open('http://stackoverflow.com/a/13328397/1269037');\r\n        };\r\n\r\n        // play();\r\n      }\r\n  }\r\n\r\n  const clickStopNotification = () => {\r\n    clearTimeout(timer);\r\n  };\r\n\r\n  const clickStartNotification = () => {\r\n    var date = new Date();\r\n    console.log(date);\r\n    const minutosCheck = [];\r\n    let minutes = date.getMinutes().toString();\r\n\r\n    if (timeframe === \"60\") {\r\n      minutosCheck.push(\"59\");\r\n    } else if (timeframe === \"15\") {\r\n      minutosCheck.push(\"14\");\r\n      minutosCheck.push(\"29\");\r\n      minutosCheck.push(\"44\");\r\n      minutosCheck.push(\"59\");\r\n    } else if (timeframe === \"5\") {\r\n      minutosCheck.push(\"4\");\r\n      minutosCheck.push(\"9\");\r\n      minutes = (minutes.length > 1) ? minutes.substring(1) : minutes;\r\n    }\r\n\r\n\r\n\r\n    if ((minutosCheck.indexOf(minutes) >= 0) && date.getSeconds().toString() === segundos) {\r\n      // if(date.getHours() >= 9 && (minutosCheck.indexOf(minutes) >= 0) && date.getSeconds().toString() === segundosParam ) {\r\n      // if (date.getHours() >= 9 && date.getSeconds() === 30) {\r\n      // const som = document.getElementById(\"som\");\r\n      // som.play();\r\n      // showDateTime();\r\n      notificar();\r\n    }\r\n\r\n    setTimer(setTimeout(() => clickStartNotification() , 1000));\r\n  }\r\n\r\n  const checkEnableSound = (event) => {\r\n    clearTimeout(timer);\r\n    setSoundEnabled(event.target.checked);\r\n  };\r\n\r\n  return (\r\n      <section>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item >\r\n            <p>Timeframe</p>\r\n          </Grid>\r\n          <Grid item >\r\n            <Input value={timeframe} onChange={handleTimeframeChange} ></Input>\r\n          </Grid>\r\n\r\n          <Grid item >\r\n            <p>Segundos</p>\r\n          </Grid>\r\n          <Grid item >\r\n            <Input value={segundos} onChange={handleSegundosChange}></Input>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item >\r\n            <Button variant=\"contained\" onClick={clickStartNotification} color=\"primary\">Start</Button>\r\n          </Grid>\r\n          <Grid item >\r\n            <Button variant=\"contained\" onClick={clickStopNotification} color=\"secondary\">Stop</Button>\r\n          </Grid>\r\n          <Grid item >\r\n            <Button variant=\"contained\" onClick={notificar}>Teste</Button>\r\n          </Grid>\r\n\r\n          <Checkbox\r\n            name=\"sound-enabled\"\r\n            checked={soundEnabled}\r\n            size=\"medium\"\r\n            label=\"Habilitar som\"\r\n            onChange={checkEnableSound}\r\n          /> Som\r\n        </Grid>\r\n\r\n        <p>Última notificação: {datetime}</p>\r\n      </section>\r\n  );\r\n}\r\n\r\nexport default Notificator;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nfunction CalculatorRm() {\r\n  const [averan, setAveran] = useState(0.17);\r\n  const [capital, setCapital] = useState(2500);\r\n  const [risco, setRisco] = useState(3);\r\n  const [preco, setPreco] = useState(24.85);\r\n  const [calculo, setCalculo] = useState({\r\n    capitalLote: 0,\r\n    gainTicks: 0,\r\n    lossTicks: 0,\r\n    lossMaxOp: 0,\r\n    lote: 0,\r\n    gainLote: 0,\r\n    lossMaxLote: 0,\r\n    porcentagemGainCapital: 0,\r\n    porcentagemLossCapital: 0,\r\n  });\r\n\r\n  const handleAveranChange = (e) => {\r\n    setAveran(e.target.value);\r\n  };\r\n\r\n  const handleCapitalChange = (e) => {\r\n    setCapital(e.target.value);\r\n  };\r\n\r\n  const handleRiscoChange = (e) => {\r\n    setRisco(e.target.value);\r\n  };\r\n\r\n  const handlePrecoChange = (e) => {\r\n    setPreco(e.target.value);\r\n  };\r\n\r\n  const calcular = () => {\r\n    const gainTicks = averan*5;\r\n    const lossTicks = gainTicks * risco;\r\n    const lossMaxOp = gainTicks * (risco * 2 -1);\r\n    const capitalLote = capital/2;\r\n    const lossMaxLote = (capitalLote*lossMaxOp)/preco;\r\n    const lote = capitalLote / preco;\r\n    const gainLote = lossMaxLote/(risco * 2 -1);\r\n    const porcentagemGainCapital = gainLote * 100 / capital;\r\n    const porcentagemLossCapital = lossMaxLote * 100 / capital;\r\n\r\n    setCalculo({\r\n      capitalLote: capitalLote,\r\n      gainTicks: gainTicks,\r\n      lossTicks: lossTicks,\r\n      lossMaxOp: lossMaxOp,\r\n      lote: lote,\r\n      gainLote: gainLote,\r\n      lossMaxLote: lossMaxLote,\r\n      porcentagemGainCapital: porcentagemGainCapital,\r\n      porcentagemLossCapital: porcentagemLossCapital,\r\n    })\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={1}\r\n      >\r\n        <div>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <p>Averan</p>\r\n            </Grid>\r\n            <Grid item>\r\n              <Input value={averan} onChange={handleAveranChange}></Input>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <div>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <p>Capital</p>\r\n            </Grid>\r\n            <Grid item>\r\n              <Input value={capital} onChange={handleCapitalChange}></Input>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <div>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <p>Risco (x)</p>\r\n            </Grid>\r\n            <Grid item>\r\n              <Input value={risco} onChange={handleRiscoChange}></Input>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <div>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <p>Preço</p>\r\n            </Grid>\r\n            <Grid item>\r\n              <Input value={preco} onChange={handlePrecoChange}></Input>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n        <Grid item>\r\n          <Button variant=\"contained\" onClick={calcular} color=\"primary\">\r\n            Calcular\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <p>\r\n        Capital Lote:{\" \"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          prefix=\"R$ \"\r\n          value={calculo.capitalLote}\r\n        />\r\n      </p>\r\n      <p>\r\n        Gain / Ticks:{\" \"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          value={calculo.gainTicks}\r\n        />\r\n      </p>\r\n      <p>\r\n        Loss / Ticks:{\" \"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          value={calculo.lossTicks}\r\n        />\r\n      </p>\r\n      <p>\r\n        Loss Max / Ticks:{\" \"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          value={calculo.lossMaxOp}\r\n        />\r\n      </p>\r\n      <p>\r\n        Lote:{\" \"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          value={calculo.lote}\r\n        />\r\n      </p>\r\n      <p>\r\n        Gain:{\" \"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          prefix=\"R$ \"\r\n          value={calculo.gainLote}\r\n        /> \r\n        {\" (\"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          suffix=\"%\"\r\n          value={calculo.porcentagemGainCapital}\r\n        /> \r\n        {\")\"}\r\n      </p>\r\n      <p>\r\n        Loss Max:{\" \"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          prefix=\"R$ \"\r\n          value={calculo.lossMaxLote}\r\n        />\r\n        {\" (\"}\r\n        <NumberFormat\r\n          displayType=\"text\"\r\n          decimalScale={2}\r\n          suffix=\"%\"\r\n          value={calculo.porcentagemLossCapital}\r\n        /> \r\n        {\")\"}\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CalculatorRm;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './App.css';\r\nimport Notificator from './components/notificator/Notificator';\r\nimport CalculatorRm from './components/calculator-rm/CalculatorRm';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n      <header className=\"App-header\">\r\n        <p>\r\n          THelp\r\n        </p>\r\n      </header>\r\n      <Grid style={{padding: 20}} container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2} >\r\n          <Grid item >\r\n            <Notificator />\r\n          </Grid>\r\n          <Grid item >\r\n            <CalculatorRm />\r\n          </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />\r\n  // </React.StrictMode>\r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}